networks:
  ai-agents-network:
    driver: bridge

volumes:
  postgres_data:

services:
  # Database
  db:
    image: postgres:15
    container_name: ai_agents_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: chat_db
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ai-agents-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d chat_db"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s

  # MCP Server (Serverless)
  mcp-server:
    build: ./ai-agents-mcp-server
    container_name: ai-agents-mcp-server
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - ./ai-agents-mcp-server/src:/app/src
      - ./ai-agents-mcp-server/logs:/app/logs
    networks:
      - ai-agents-network

  # Backend API
  backend:
    build: ./ai-agents-back-end
    container_name: ai-agents-backend
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=dev
      - POSTGRES_DATABASE=chat_db
      - MCP_SERVER_HOST=mcp-server
      - MCP_SERVER_PORT=8001
      - GOOGLE_GENAI_USE_VERTEXAI=${GOOGLE_GENAI_USE_VERTEXAI:-FALSE}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    ports:
      - "8000:8000"
    volumes:
      - ./ai-agents-back-end:/app
    networks:
      - ai-agents-network

  # Frontend
  frontend:
    build: ./ai-agents-front-end
    container_name: ai-agents-frontend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - API_BASE_URL=http://backend:8000
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=dev
      - POSTGRES_DATABASE=chat_db
    ports:
      - "8501:8501"
    volumes:
      - ./ai-agents-front-end:/app
    networks:
      - ai-agents-network
